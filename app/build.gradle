apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.umeng.soexample.weidumovie"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //版本冲突解决
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.squareup.okhttp3:okhttp:3.4.2'
    //网络框架
    //注意  使用最新的依赖  导包的时候,导的是io包下的观察者和订阅者
    //1.它会自动引用基础库与Android库
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'
    //2.注意使用线程调度器时,在网络请求工具类中使用的Rxjava+Retrofit的依赖是最新的2.x.y,可以去GitHub中去查找最新的:
    //retrofit and rxjava
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    // okhttp拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'

    //图片框架
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    //Gson
    implementation 'com.google.code.gson:gson:2.2.4'
    //RecycleView
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    //EventBus
    implementation 'org.greenrobot:eventbus:3.0.0'
    //XReyclerView
    implementation 'com.jcodecraeer:xrecyclerview:1.3.2'//加V4  V7冲突
    //黄油刀
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //腾讯bugly
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    // leakcanary内存泄漏检测框架
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'
    //blockcanary性能优化框架
    implementation 'com.github.moduth:blockcanary-android:1.2.1'
    // 仅在debug包启用BlockCanary进行卡顿监控和提示的话，可以这么用
    debugImplementation 'com.github.moduth:blockcanary-android:1.2.1'
    releaseImplementation 'com.github.moduth:blockcanary-no-op:1.2.1'
    //banner轮播框架
    implementation 'com.youth.banner:banner:1.4.10'
    //沉浸式
    implementation 'com.jaeger.statusbarutil:library:1.4.0'
    implementation 'com.android.support:design:28.0.0'
}
